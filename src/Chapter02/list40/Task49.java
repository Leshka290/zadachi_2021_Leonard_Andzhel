package Chapter02.list40;

/*
Немутируемый класс. Написать программу, представляющую немутируемый
класс.
 */
public final class Task49 {

    private final int a;
    private final int b;
    public Task49(int a, int b) {
        this.a = a;
        this.b = b;
    }
    public int getA() {
        return a;
    }
    public int getB() {
        return b;
    }
}

/*
    Немутируемый класс должен удовлетворять нескольким требованиям, а именно:
♦ класс должен быть помечен как final, чтобы подавить расширяемость (другие
классы не могут расширять этот класс; следовательно, они не могут
переопределять его методы);
♦ все ПОЛЯ ДОЛЖНЫ быть объявлены приватными (private) И финальными (final)
(они не видны в других классах и инициализируются только один раз в
конструкторе этого класса);
♦ класс должен содержать параметризованный публичный (public) конструктор
(или приватный (private) конструктор и фабричные методы для создания
экземпляров), который инициализирует поля;
♦ класс должен предоставлять геттеры, т. е. методы чтения, для полей;
♦ класс не должен выставлять наружу сеттеры, т. е. методы записи/мутации.
 */
