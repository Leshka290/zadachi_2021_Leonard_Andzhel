package Chapter02.list50;

/*
Предотвращение плохих данных в неизменяемых объектах. Написать
программу, которая предотвращает плохие данные в немутируемых объектах.
 */
public class  Task52 {
    /*
    Плохие данные — это любые данные, которые оказывают негативное влияние на
немутируемый объект (например, поврежденные данные). Скорее всего, эти данные
поступают от пользователей или из внешних источников данных, которые не
находятся под нашим непосредственным контролем. В таких случаях плохие данные
могут ударить по немутируемому объекту, и хуже всего то, что нет никакой
возможности от этого избавиться. Немутируемый объект не может быть изменен после
создания; следовательно, плохие данные будут жить счастливо все время, пока
живет объект.
Решение этой проблемы заключается в проверке всех данных, входящих в
немутируемый объект, на соответствие всеобъемлющему набору ограничений.

Существуют разные способы выполнения указанной проверки, от
специализированной проверки до встроенных решений. Проверка может выполняться вне или
внутри класса немутируемых объектов в зависимости от дизайна приложения.
Например, если немутируемый объект построен с помощью шаблона строителя, то
проверка может быть выполнена в строительном классе.
JSR 380 представляет собой спецификацию API Java для проверки компонентов
(бинов) объектной модели (Java SE/EE). Эта спецификация может использоваться
для проверки с помощью аннотаций. Валидатор Hibernate Validator является
эталонной имплементацией API проверки, и его можно легко предоставить в качестве
Maven-зависимости в файл pom.xmi (сверьтесь с исходным кодом, прилагаемым к
этой книге).

Аннотации для ограничения: @NotNull, @Min, омах, @size и @Emall).
     */
}
